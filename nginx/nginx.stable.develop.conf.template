events {
    worker_connections 1024;
}

http {
    # HTTP 업그레이드 관련 기본값 처리
    map $http_upgrade $connection_upgrade {
        default upgrade;
        "" close;
    }

    upstream backend {
        server $EC2_PUBLIC_HOST:$STABLE_BACKEND_PORT;
    }
    upstream frontend {
        server $EC2_PUBLIC_HOST:$STABLE_FRONTEND_PORT;
    }

    # HTTP 접근을 HTTPS로 리다이렉트
    server {
        listen 80;
        server_name j12b209.p.ssafy.io;

        return 301 https://$host$request_uri;
    }

    # HTTPS 서버 블록
    server {
        listen 443 ssl http2;
        server_name j12b209.p.ssafy.io;

        # Certbot에서 발급받은 SSL 인증서 경로
        ssl_certificate /etc/letsencrypt/live/j12b209.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/j12b209.p.ssafy.io/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        client_max_body_size 20m;

        # Next.js 서버로 프록시
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 정적 파일 제공 (Next.js 빌드된 파일)
        location /_next/ {
            proxy_pass http://frontend;
            proxy_cache_valid 200 1h;
            proxy_set_header Cache-Control "public, max-age=31536000, immutable";
        }

        # API 요청을 백엔드로 전달
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
